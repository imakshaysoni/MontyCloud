import jsonfrom MontyCloud.utils.logger import loggerfrom MontyCloud.app.image import Imagesclass ListImage(Images):    def __init__(self, event, context):        super().__init__()        self.event = event        self.context = context    def perform_task(self):        try:            # Fetching filter            filters = self.event['queryStringParameters']            # Create dynamodb filters            dynamodb_filters = []            if 'user' in filters:                dynamodb_filters.append('contains(tags, :user)')            if 'tag' in filters:                dynamodb_filters.append('contains(tags, :tag)')            # Query DynamoDB            if dynamodb_filters:                response = self.dynamodb_client.scan(                    TableName=self.table_name,                    FilterExpression=' AND '.join(dynamodb_filters)                )            else:                response = self.dynamodb_client.scan(TableName=self.table_name)            # Extract items from DynamoDB response            items = response.get('Items', [])            images = [{'imageId': item['imageId']['S'], 'title': item['title']['S']} for item in items]            # Return success response            response = {                'statusCode': 200,                'body': json.dumps(images)            }        except Exception as err:            logger.error(f"List image failed, Error: {err}")            # Return error response            response = {                "statusCode": 500,                "body": json.dumps({                    "message": "List image failed.",                    "error": str(err)})            }        return response